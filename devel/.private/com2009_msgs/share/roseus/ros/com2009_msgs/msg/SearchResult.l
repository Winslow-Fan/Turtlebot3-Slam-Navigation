;; Auto-generated. Do not edit!


(when (boundp 'com2009_msgs::SearchResult)
  (if (not (find-package "COM2009_MSGS"))
    (make-package "COM2009_MSGS"))
  (shadow 'SearchResult (find-package "COM2009_MSGS")))
(unless (find-package "COM2009_MSGS::SEARCHRESULT")
  (make-package "COM2009_MSGS::SEARCHRESULT"))

(in-package "ROS")
;;//! \htmlinclude SearchResult.msg.html


(defclass com2009_msgs::SearchResult
  :super ros::object
  :slots (_total_distance_travelled _closest_object_distance _closest_object_angle ))

(defmethod com2009_msgs::SearchResult
  (:init
   (&key
    ((:total_distance_travelled __total_distance_travelled) 0.0)
    ((:closest_object_distance __closest_object_distance) 0.0)
    ((:closest_object_angle __closest_object_angle) 0.0)
    )
   (send-super :init)
   (setq _total_distance_travelled (float __total_distance_travelled))
   (setq _closest_object_distance (float __closest_object_distance))
   (setq _closest_object_angle (float __closest_object_angle))
   self)
  (:total_distance_travelled
   (&optional __total_distance_travelled)
   (if __total_distance_travelled (setq _total_distance_travelled __total_distance_travelled)) _total_distance_travelled)
  (:closest_object_distance
   (&optional __closest_object_distance)
   (if __closest_object_distance (setq _closest_object_distance __closest_object_distance)) _closest_object_distance)
  (:closest_object_angle
   (&optional __closest_object_angle)
   (if __closest_object_angle (setq _closest_object_angle __closest_object_angle)) _closest_object_angle)
  (:serialization-length
   ()
   (+
    ;; float32 _total_distance_travelled
    4
    ;; float32 _closest_object_distance
    4
    ;; float32 _closest_object_angle
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _total_distance_travelled
       (sys::poke _total_distance_travelled (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _closest_object_distance
       (sys::poke _closest_object_distance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _closest_object_angle
       (sys::poke _closest_object_angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _total_distance_travelled
     (setq _total_distance_travelled (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _closest_object_distance
     (setq _closest_object_distance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _closest_object_angle
     (setq _closest_object_angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get com2009_msgs::SearchResult :md5sum-) "d70c4de9b794fcaee59b27f3888dd125")
(setf (get com2009_msgs::SearchResult :datatype-) "com2009_msgs/SearchResult")
(setf (get com2009_msgs::SearchResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result
float32 total_distance_travelled   # Total distance travelled during the action (meters)
float32 closest_object_distance    # LaserScan distance to the closest detected obstacle (meters) 
float32 closest_object_angle       # The LaserScan angle of the closest detected obstacle (degrees)

")



(provide :com2009_msgs/SearchResult "d70c4de9b794fcaee59b27f3888dd125")


