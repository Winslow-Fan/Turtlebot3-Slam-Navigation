// Auto-generated. Do not edit!

// (in-package com2009_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class SearchResult {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.total_distance_travelled = null;
      this.closest_object_distance = null;
      this.closest_object_angle = null;
    }
    else {
      if (initObj.hasOwnProperty('total_distance_travelled')) {
        this.total_distance_travelled = initObj.total_distance_travelled
      }
      else {
        this.total_distance_travelled = 0.0;
      }
      if (initObj.hasOwnProperty('closest_object_distance')) {
        this.closest_object_distance = initObj.closest_object_distance
      }
      else {
        this.closest_object_distance = 0.0;
      }
      if (initObj.hasOwnProperty('closest_object_angle')) {
        this.closest_object_angle = initObj.closest_object_angle
      }
      else {
        this.closest_object_angle = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type SearchResult
    // Serialize message field [total_distance_travelled]
    bufferOffset = _serializer.float32(obj.total_distance_travelled, buffer, bufferOffset);
    // Serialize message field [closest_object_distance]
    bufferOffset = _serializer.float32(obj.closest_object_distance, buffer, bufferOffset);
    // Serialize message field [closest_object_angle]
    bufferOffset = _serializer.float32(obj.closest_object_angle, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type SearchResult
    let len;
    let data = new SearchResult(null);
    // Deserialize message field [total_distance_travelled]
    data.total_distance_travelled = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [closest_object_distance]
    data.closest_object_distance = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [closest_object_angle]
    data.closest_object_angle = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 12;
  }

  static datatype() {
    // Returns string type for a message object
    return 'com2009_msgs/SearchResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'd70c4de9b794fcaee59b27f3888dd125';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #result
    float32 total_distance_travelled   # Total distance travelled during the action (meters)
    float32 closest_object_distance    # LaserScan distance to the closest detected obstacle (meters) 
    float32 closest_object_angle       # The LaserScan angle of the closest detected obstacle (degrees)
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new SearchResult(null);
    if (msg.total_distance_travelled !== undefined) {
      resolved.total_distance_travelled = msg.total_distance_travelled;
    }
    else {
      resolved.total_distance_travelled = 0.0
    }

    if (msg.closest_object_distance !== undefined) {
      resolved.closest_object_distance = msg.closest_object_distance;
    }
    else {
      resolved.closest_object_distance = 0.0
    }

    if (msg.closest_object_angle !== undefined) {
      resolved.closest_object_angle = msg.closest_object_angle;
    }
    else {
      resolved.closest_object_angle = 0.0
    }

    return resolved;
    }
};

module.exports = SearchResult;
